version: '2.1'

volumes:
  kong_data:

networks:
  default:
    name:
      kong-net

services:
  httpbin:
    image: kennethreitz/httpbin
    ports:
      - "4000:80"

  kong-migrations:
    image: "${KONG_DOCKER_TAG:-kong:2.1.4}"
    container_name: kong-migrations
    command: >
      kong migrations bootstrap &&
      kong migrations up &&
      kong migrations finish
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      KONG_PG_HOST: postgres
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
      KONG_PG_USER: ${KONG_PG_USER:-kong}
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}

  postgres:
    image: postgres:13.3
    hostname: postgres
    container_name: postgres
    environment:
      POSTGRES_DB: ${KONG_PG_DATABASE:-kong}
      POSTGRES_USER: ${KONG_PG_USER:-kong}
      POSTGRES_PASSWORD: ${KONG_PG_PASSWORD:-kong}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3
    stdin_open: true
    tty: true
    volumes:
      - kong_data:/var/lib/postgresql/data
    ports:
      - 25432:5432

  kong:
    container_name: kong
    build:
      context: .
      dockerfile: ./Dockerfile
    command: sleep infinity
    environment:
      KONG_TEST_DATABASE: postgres
      KONG_TEST_PG_HOST: postgres
      KONG_TEST_PG_DATABASE: kong
      KONG_TEST_PG_USER: kong
      KONG_TEST_PG_PASSWORD: kong
      KONG_TEST_DNS_RESOLVER: 127.0.0.11
      KONG_TEST_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_TEST_PLUGINS: bundled,jwt-claims-headers
      KONG_TEST_LOG_LEVEL: debug
      KONG_TESTS: /plugin/spec
    ports:
      - 8000:8000/tcp
      - 8001:8001/tcp
      - 8443:8443/tcp
      - 8444:8444/tcp
    depends_on:
      postgres:
        condition: service_healthy
      kong-migrations:
        condition: service_started
    volumes:
      - .:/plugin
